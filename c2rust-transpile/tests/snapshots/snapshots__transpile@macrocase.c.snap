---
source: c2rust-transpile/tests/snapshots.rs
expression: cat tests/snapshots/macrocase.rs
input_file: c2rust-transpile/tests/snapshots/macrocase.c
---
#![allow(
    dead_code,
    non_camel_case_types,
    non_snake_case,
    non_upper_case_globals,
    path_statements,
    unsafe_op_in_unsafe_fn,
    unused_assignments,
    unused_mut,
    unused_unsafe,
    unused_variables
)]
use core::ffi;
pub type ZSTD_dParameter = ffi::c_uint;
pub const ZSTD_d_experimentalParam1: ZSTD_dParameter = 1000;
pub const ZSTD_d_windowLogMax: ZSTD_dParameter = 100;
pub const ZSTD_d_format: ffi::c_uint = 1000 as ffi::c_uint;
#[unsafe(no_mangle)]
pub unsafe extern "C" fn ZSTD_dParam_getBounds(mut dParam: ZSTD_dParameter) -> ffi::c_int {
    let mut bounds: ffi::c_int = 0 as ffi::c_int;
    match dParam as ffi::c_uint {
        100 => {
            bounds = 1 as ffi::c_int;
            return bounds;
        }
        1000 => {
            bounds = 5 as ffi::c_int;
            return bounds;
        }
        _ => {}
    }
    return bounds;
}
