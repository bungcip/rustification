---
source: c2rust-transpile/tests/snapshots.rs
assertion_line: 67
expression: cat tests/snapshots/insertion.rs
input_file: c2rust-transpile/tests/snapshots/insertion.c
---
#![allow(
    dead_code,
    mutable_transmutes,
    non_camel_case_types,
    non_snake_case,
    non_upper_case_globals,
    path_statements,
    unsafe_op_in_unsafe_fn,
    unused_assignments,
    unused_mut,
    unused_unsafe,
    unused_variables
)]
use core::ffi;
#[unsafe(no_mangle)]
pub unsafe extern "C" fn insertion_sort(n: ffi::c_int, p: *mut ffi::c_int) {
    let mut i: ffi::c_int = 1 as ffi::c_int;
    while i < n {
        let tmp: ffi::c_int = *p.offset(i as isize);
        let mut j: ffi::c_int = i;
        while j > 0 as ffi::c_int && *p.offset((j - 1 as ffi::c_int) as isize) > tmp {
            *p.offset(j as isize) = *p.offset((j - 1 as ffi::c_int) as isize);
            j -= 1;
            j;
        }
        *p.offset(j as isize) = tmp;
        i += 1;
        i;
    }
}
